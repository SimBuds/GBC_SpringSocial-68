version: "3.8"

services:

  postgres-user:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypass
    volumes:
      - ./data/postgres-user:/var/lib/postgresql/data
      - ./init/postgres/user-service/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    container_name: postgres-user
    restart: unless-stopped
    networks:
      - spring

  postgres-comment:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypass
    volumes:
      - ./data/postgres-comment:/var/lib/postgresql/data
      - ./init/postgres/comment-service/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    container_name: postgres-comment
    restart: unless-stopped
    networks:
      - spring

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.ca
      PGADMIN_DEFAULT_PASSWORD: password
    container_name: pgadmin
    restart: unless-stopped
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=mypass
      - MONGO_INITDB_DATABASE=SpringSocialMongo
    volumes:
      - ./data/mongo/SpringSocialMongo:/data/db
      - ./init/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8080:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongoadmin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mypass
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express-gbc
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring

  post-service:
    image: post-service
    ports:
      - "8081:8081"
    build:
      context: ./post-service
      dockerfile: ./Dockerfile
    container_name: post-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring

  comment-service:
    image: comment-service
    ports:
      - "8082:8082"
    build:
      context: ./comment-service
      dockerfile: ./Dockerfile
    container_name: comment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: unless-stopped
    depends_on:
      - postgres-comment
    networks:
      - spring

  user-service:
    image: user-service
    ports:
      - "8083:8083"
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: unless-stopped
    depends_on:
      - postgres-user
    networks:
      - spring

networks:
  spring:
    driver: bridge